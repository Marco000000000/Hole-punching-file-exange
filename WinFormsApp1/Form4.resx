<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAqgoAAAJNU0Z0AUkBTAIBAQIB
        AAF4AQABeAEAARABAAEQAQAD/wEAASEBAAj/AUIBTQE2BwABNgMAASgDAAFAAwABEAMAAQEBAAEgBgAB
        EBIAAvMB8QH/AvMB8QH/AfMB8gHxAf8C6gHnAf8B5wHmAeMB/wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB
        /wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB/wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB/wHnAeYB4wH/AvEB
        7wH/BAADNAFUAz0B9QMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DPQH1AzQB
        VIQAAfMB8gHxAf8B9AHzAfEB/wH0AfMB8QH/AeoB6AHlAf8B5wHlAeEB/wHnAeUB4QH/AecB5QHhAf8B
        5wHlAeEB/wHnAeUB4QH/AecB5QHhAf8B5wHlAeEB/wHnAeUB4QH/AecB5QHhAf8C5wHkAf8B5wHmAeMB
        /wHxAfAB7gH/BAADUwGpA1kBxgM1AVUDNQFVAzUBVQM1AVUDNQFVAzUBVQM1AVUDNQFVAzUBVQM1AVUD
        WQHGA1MBqYQAAvMB8QH/AW4BkAHsAf8BMwFkAesB/wExAWIB5wH/ATEBYQHnAf8BMQFhAecB/wExAWEB
        5wH/ATEBYQHnAf8BMQFhAecB/wExAWEB5wH/ATEBYQHnAf8BMQFhAecB/wEwAWAB5wH/Ac0B0gHiAf8B
        5wHmAeMB/wHxAfAB7gH/BAADUwGqA1MBqigAA1MBqgNTAaqEAAHzAfIB8QH/AUoBdQHsAf8BHgFVAeoB
        /wEgAVYB6gH/AR4BVQHqAf8BHgFVAeoB/wErAV8B6wH/ASkBXQHrAf8BGwFTAeoB/wEhAVcB6gH/AR4B
        VQHqAf8BHgFVAeoB/wEeAVUB6gH/Ab0ByAHlAf8B5wHmAeMB/wHxAfAB7gH/BAADUwGqA1MBqigAA1MB
        qgNTAaqEAALzAfEB/wFKAXUB7AH/AR4BVQHqAf8BmQGyAfUB/wGNAakB9QH/ASkBXQHrBf8BNwFoAewB
        /wHFAdQB+QH/AcUB0wH6Af8BOQFpAe0B/wEeAVUB6gH/AR4BVQHqAf8BvQHIAeUB/wHnAeYB4wH/AfEB
        8AHuAf8EAANTAaoDUwGqKAADUwGqA1MBqoQAAvMB8QH/AUoBdgHsAf8BHgFVAeoB/wGbAbQB9gH/AQAB
        MAHlAf8BtgHIAfgB/wP+Af8BBAFBAegB/wH3AfkB/gH/AcABzwH5Af8BHQFUAeoB/wEcAVQB6gH/AR4B
        VQHqAf8BvQHIAeUB/wHnAeYB4wH/AfEB8AHuAf8EAANTAaoDUwGqKAADUwGqA1MBqoQAAfMB8gHxAf8B
        SgF1AewB/wEeAVUB6gH/AVIBfAHvAf8BlQGvAfUB/wEuAWEB7AH/AYABnwHzAf8BgwGhAfMB/wEYAVAB
        6gH/AWgBjQHxAf8BigGnAfQB/wEoAVwB6wH/AR4BVQHqAf8BvQHIAeUB/wHnAeYB4wH/AfEB8AHuAf8E
        AANTAaoDUwGqKAADUwGqA1MBqoQAAvMB8QH/AUUBcgHrAf8BHQFUAeoB/wEdAVQB6gH/AR0BVAHqAf8B
        HQFUAeoB/wEdAVQB6gH/AR0BVAHqAf8BHQFUAeoB/wEdAVQB6gH/AR0BVAHqAf8BHQFUAeoB/wEdAVUB
        6gH/AbsBxgHlAf8B5wHmAeMB/wHxAfAB7gH/BAADUwGqA1MBqigAA1MBqgNTAaqEAAHzAfIB8QH/Ae0B
        7gHxAf8B3gHjAfEB/wHWAdoB5gH/AdMB2AHkAf8B0wHYAeQB/wHTAdgB5AH/AdMB2AHkAf8B0wHYAeQB
        /wHTAdgB5AH/AdMB2AHkAf8B0wHYAeQB/wHTAdcB5AH/AegB5wHjAf8B5wHmAeMB/wLwAe4B/wQAA1MB
        qgNTAaooAANTAaoDUwGqhAAC8wHxAf8C8wHxAf8B8wHyAfEB/wHqAekB5gH/AecB5gHjAf8B5wHmAeMB
        /wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB/wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB/wHnAeYB4wH/AecB
        5gHjAf8B3wHbAdYB/wHuAewB6QH/BAADUwGqA1MBqigAA1MBqgNTAaqEAALzAfEB/wLzAfEB/wLzAfEB
        /wHqAekB5gH/AecB5gHjAf8B5wHmAeMB/wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB/wHnAeYB4wH/AecB
        5gHjAf8B5wHmAeMB/wHnAeYB4wH/Ad8B2wHXAf8B2AHRAcsB/wHuAewB6gH/BAADUwGqA1MBqhgAAwQB
        BQMwAUsDNQFVAzUBVQNZAcYDUwGqhAAB8wHyAfEB/wHzAfIB8QH/AvMB8QH/AeoB6QHmAf8B5wHmAeMB
        /wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB/wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB/wHpAegB5QH/Ad0B
        2QHUAf8B1gHPAckB/wHXAdABygH/Ae0B6wHoAf8EAANTAaoDUwGqGAADSQGHAwAB/wMAAf8DAAH/AwAB
        /wNTAamEAALzAfEB/wLzAfEB/wHzAfIB8QH/AeoB6QHmAf8B5wHmAeMB/wHnAeYB4wH/AecB5gHjAf8B
        5wHmAeMB/wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB/wHIAcMBvQH/Ab0BtwGwAf8BvAG2Aa8B/wHYAdUB
        0AH/AfQB8wHyAf8EAANTAaoDUwGqGAADUwGqA1MBqgQAA0IBdAMNAf4DOAFdhAAB8wHyAfEB/wHzAfIB
        8QH/AvMB8QH/AeoB6QHmAf8B5wHmAeMB/wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB/wHnAeYB4wH/AecB
        5gHjAf8B5wHmAeMB/wHGAcEBuwH/Ab0BtwGwAf8B2AHVAdEB/wHzAfIB8QH/AfMB8gHxAf8EAANTAaoD
        UwGqGAADUwGqA1MBqgNCAXQDDQH+Az8BbogAAvMB8QH/AvMB8QH/AfMB8gHxAf8C6QHmAf8B5wHmAeMB
        /wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB/wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB/wHFAcABuQH/AdgB
        1QHRAf8C9AHyAf8B8wHyAfEB/wLzAfEB/wQAA1MBqQNZAcYDNQFVAzUBVQM1AVUDNQFVAzUBVQM1AVUD
        WQHGA1QB7QMNAf4DPwFukAAC8wHxAf8B8wHyAfEB/wLyAfAB/wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB
        /wHnAeYB4wH/AecB5gHjAf8B5wHmAeMB/wHnAeYB4wH/AeMB4QHeAf8B8wHyAfEB/wLzAfEB/wHzAfIB
        8QH/AvMB8QH/BAADNAFUAz0B9QMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DOAH3Az8BbJAAAUIB
        TQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8DAAGAAQEGAAGAAQEGAAGfAfkGAAGfAfkG
        AAGfAfkGAAGfAfkGAAGfAfkGAAGfAfkGAAGfAfkGAAGfAfkGAAGfAYEGAAGfAYEGAAGfAZEGAAGfAYMG
        AAGAAQcEAAGAAQABgAEPBAAL
</value>
  </data>
</root>